// <auto-generated />
using System;
using BouvetØlsmaking.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BouvetØlsmaking.Migrations
{
    [DbContext(typeof(TastingContext))]
    partial class TastingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BouvetØlsmaking.Models.Beer", b =>
                {
                    b.Property<int>("BeerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ABV");

                    b.Property<int>("BeerClassId");

                    b.Property<int>("BeerStyleId");

                    b.Property<int>("BreweryId");

                    b.Property<string>("Name");

                    b.Property<string>("RateBeerLink");

                    b.HasKey("BeerId");

                    b.HasIndex("BeerStyleId");

                    b.HasIndex("BreweryId");

                    b.ToTable("Beer");
                });

            modelBuilder.Entity("BouvetØlsmaking.Models.BeerClass", b =>
                {
                    b.Property<int>("BeerClassId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("BeerClassId");

                    b.ToTable("Beerclass");
                });

            modelBuilder.Entity("BouvetØlsmaking.Models.Beerstyle", b =>
                {
                    b.Property<int>("BeerstyleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("BeerstyleId");

                    b.ToTable("Beerstyle");
                });

            modelBuilder.Entity("BouvetØlsmaking.Models.Brewery", b =>
                {
                    b.Property<int>("BreweryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<string>("Name");

                    b.Property<string>("Website");

                    b.HasKey("BreweryId");

                    b.ToTable("Brewery");
                });

            modelBuilder.Entity("BouvetØlsmaking.Models.RandomFact", b =>
                {
                    b.Property<int>("RandomFactId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FactText");

                    b.HasKey("RandomFactId");

                    b.ToTable("RandomFact");
                });

            modelBuilder.Entity("BouvetØlsmaking.Models.Taster", b =>
                {
                    b.Property<int>("TasterId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName");

                    b.Property<string>("EmailAddress");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("Password");

                    b.HasKey("TasterId");

                    b.ToTable("Taster");
                });

            modelBuilder.Entity("BouvetØlsmaking.Models.Tasting", b =>
                {
                    b.Property<int>("TastingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsBlind");

                    b.Property<string>("Name");

                    b.Property<DateTime>("TastingDate");

                    b.HasKey("TastingId");

                    b.ToTable("Tasting");
                });

            modelBuilder.Entity("BouvetØlsmaking.Models.TastingBeer", b =>
                {
                    b.Property<int>("TastingBeerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BeerId");

                    b.Property<int>("SortOrder");

                    b.Property<int>("TastingId");

                    b.HasKey("TastingBeerId");

                    b.HasIndex("BeerId");

                    b.HasIndex("TastingId");

                    b.ToTable("TastingBeer");
                });

            modelBuilder.Entity("BouvetØlsmaking.Models.TastingBeerResult", b =>
                {
                    b.Property<int>("TastingBeerResultId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Abv");

                    b.Property<int>("BeerClassId");

                    b.Property<string>("BeerClassName");

                    b.Property<int>("BeerId");

                    b.Property<string>("BeerName");

                    b.Property<string>("BeerStyle");

                    b.Property<string>("BreweryName");

                    b.Property<string>("BreweryUrl");

                    b.Property<string>("RateBeerUrl");

                    b.Property<double>("ScoreAppearance");

                    b.Property<double>("ScoreFinal");

                    b.Property<double>("ScoreOverall");

                    b.Property<double>("ScoreTaste");

                    b.Property<int>("TastingId");

                    b.HasKey("TastingBeerResultId");

                    b.ToTable("TastingResult");
                });

            modelBuilder.Entity("BouvetØlsmaking.Models.Vote", b =>
                {
                    b.Property<int>("VoteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Appearance");

                    b.Property<int>("BeerId");

                    b.Property<string>("Note")
                        .HasMaxLength(1000);

                    b.Property<double>("Overall");

                    b.Property<double>("Taste");

                    b.Property<int>("TasterId");

                    b.Property<int>("TastingId");

                    b.HasKey("VoteId");

                    b.ToTable("Vote");
                });

            modelBuilder.Entity("BouvetØlsmaking.Models.Beer", b =>
                {
                    b.HasOne("BouvetØlsmaking.Models.Beerstyle", "Beerstyle")
                        .WithMany()
                        .HasForeignKey("BeerStyleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BouvetØlsmaking.Models.Brewery", "Brewery")
                        .WithMany()
                        .HasForeignKey("BreweryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BouvetØlsmaking.Models.TastingBeer", b =>
                {
                    b.HasOne("BouvetØlsmaking.Models.Beer", "Beer")
                        .WithMany("TastingBeers")
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BouvetØlsmaking.Models.Tasting", "Tasting")
                        .WithMany("TastingBeers")
                        .HasForeignKey("TastingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
